(function(n,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("idb-keyval")):typeof define=="function"&&define.amd?define(["exports","idb-keyval"],t):(n=typeof globalThis<"u"?globalThis:n||self,t(n.createIndexedDbAdapter={},n.idbKeyval))})(this,function(n,t){"use strict";var o=Object.defineProperty;var h=(n,t,a)=>t in n?o(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a;var l=(n,t,a)=>(h(n,typeof t!="symbol"?t+"":t,a),a);class a{constructor(e="default"){l(this,"namespace");l(this,"idb");this.namespace=e,this.idb=t.createStore(e,"keyval")}setNamespace(e){this.namespace=e,this.idb=t.createStore(e,"keyval")}buildKey(e,s){return`${e}/${s}`}getTableAndIdByKey(e){const[s,i]=e.toString().split("/");return[s,i]}async getAllKeys(e){return(await t.keys(this.idb)).filter(d=>d.toString().includes(`${e}/`))}async setItem(e,s,i){await t.set(this.buildKey(e,s),i,this.idb)}async setItems(e,s){await t.setMany(s.map(([i,d])=>[this.buildKey(e,i),d]),this.idb)}async delItem(e,s){await t.del(this.buildKey(e,s),this.idb)}async delItems(e,s){if(s){await t.delMany(s.map(d=>this.buildKey(e,d)),this.idb);return}const i=await this.getAllKeys(e);await t.delMany(i,this.idb)}async getItem(e,s){return await t.get(this.buildKey(e,s),this.idb)}async getItems(e,s){if(s)return await t.getMany(s.map(r=>this.buildKey(e,r)),this.idb);const i=await this.getAllKeys(e);return await t.getMany(i,this.idb)}async getAllItems(){return(await t.entries(this.idb)).reduce((i,[d,y])=>{const[r]=this.getTableAndIdByKey(d);return i[r]||(i[r]=[]),i[r].push(y),i},{})}}const c=u=>new a(u);n.IndexedDbAdapter=a,n.createIndexedDbAdapter=c,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
