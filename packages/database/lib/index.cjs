"use strict";var b=Object.defineProperty;var c=(a,t,e)=>t in a?b(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var l=(a,t,e)=>(c(a,typeof t!="symbol"?t+"":t,e),e);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const i=require("idb-keyval");class y{constructor(t="default"){l(this,"namespace");l(this,"idb");this.namespace=t,this.idb=i.createStore(t,"keyval")}setNamespace(t){this.namespace=t,this.idb=i.createStore(t,"keyval")}buildKey(t,e){return`${t}/${e}`}getTableAndIdByKey(t){const[e,s]=t.toString().split("/");return[e,s]}async getAllKeys(t){return(await i.keys(this.idb)).filter(n=>n.toString().includes(`${t}/`))}async setItem(t,e,s){await i.set(this.buildKey(t,e),s,this.idb)}async setItems(t,e){await i.setMany(e.map(([s,n])=>[this.buildKey(t,s),n]),this.idb)}async delItem(t,e){await i.del(this.buildKey(t,e),this.idb)}async delItems(t,e){if(e){await i.delMany(e.map(n=>this.buildKey(t,n)),this.idb);return}const s=await this.getAllKeys(t);await i.delMany(s,this.idb)}async getItem(t,e){return await i.get(this.buildKey(t,e),this.idb)}async getItems(t,e){if(e)return await i.getMany(e.map(d=>this.buildKey(t,d)),this.idb);const s=await this.getAllKeys(t);return await i.getMany(s,this.idb)}async getAllItems(){return(await i.entries(this.idb)).reduce((s,[n,r])=>{const[d]=this.getTableAndIdByKey(n);return s[d]||(s[d]=[]),s[d].push(r),s},{})}}const u=a=>new y(a);exports.IndexedDbAdapter=y;exports.createIndexedDbAdapter=u;
